<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  
  <!-- Add project-specific environment-independent properties -->
  <!-- common-build sets some properties already in Default.targets -->
  <PropertyGroup>
    <DBDir>$(MSBuildProjectDirectory)\db</DBDir>
  </PropertyGroup>

  <!-- Add any paths to support tasks and targets -->
  <PropertyGroup>
    <CommonBuildDirectory>$(MSBuildProjectDirectory)\References\common-build</CommonBuildDirectory>
  </PropertyGroup>

  <!-- Hook into the common-build workflow, see $(CommonBuildDirectory)\Master.Targets -->
  <PropertyGroup>
    <PackageTargets>$(PrePackageTargets);CopyToPackageDirectory</PackageTargets>
    <PreFunctionalTestTargets>$(PreFunctionalTestTargets);CreateDB</PreFunctionalTestTargets>
  </PropertyGroup>

  <!-- Add any common-build scripts that also hook into the workflow in Master.Targets -->
  <Import Project="$(CommonBuildDirectory)\Default.Targets" />

  <!-- Add environment-specific properties in the appropriate .Propeties file -->
  <Import Project="$(MSBuildProjectDirectory)\environments\$(Environment).properties" />

  <!-- Add your custom targets -->
  <Target Name="CopyToPackageDirectory">
    <!-- 
    Note a common MSBuild problem of evaluating wildcards in ItemGroups!
    ItemGroup wildcards are expanded when the file is parsed, not when they're used.
    This is often too soon, because the files that the wildcard is meant to capture don't exist
    until a target is run (for example, DotNet.targets copies the output of Compile to the
    package directory, but those build outputs don't exist until compilation).
    To prevent wildcard expansion, use CreateItem instead.
    Also note that DotNet.targets saves the output of compile in a property called Artifacts.
    -->
    <CreateItem Include="**\bin\$(Configuration)\**\*">
      <Output TaskParameter="Include" ItemName="PackageFiles" />
    </CreateItem>
    <Copy SourceFiles="$(PackageFiles)" DestinationFolder="$(PackageDirectory)" />
  </Target>

  <Target Name="CreateDB">
  </Target>
  
</Project>
